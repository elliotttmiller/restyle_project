# restyle_project/docker-compose.yml

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=restyle_db
      - POSTGRES_USER=restyle_user
      - POSTGRES_PASSWORD=restyle_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U restyle_user -d restyle_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

 # In docker-compose.yml

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # This is the command that was missing.
    command: >
      sh -c "python manage.py migrate && 
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # This command is simpler as it doesn't need to run migrations.
    command: celery -A backend.celery worker -l info
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data: